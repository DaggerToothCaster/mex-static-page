var contractAddress = '0xa8264364c4b267cC0574D17C7a64D3FEFAB17ea3';
var userReferer = 'No upline';
var refererDefault = '0xDefc73A59B617024ad837F441ed3840A1142A14d';
var userAddress = '';
var contractBalanceRate = 0;
var userPercentRate = 0;
var userAvailable = 0;
var userTotalDeposits = 0;
var userTotalWithdrawn = 0;
var userAmountOfDeposits = 0;
var userLastDepositTime = 0;
var basicPercentRate = 0;

function getFormattedDate(date) {
    let hour = ('0' + date.getUTCHours()).slice(- 2);
    let minute = ('0' + date.getUTCMinutes()).slice(- 2);
    let day = ('0' + date.getUTCDate()).slice(- 2);
    let month = ('0' + (date.getUTCMonth() + 1)).slice(- 2);
    let year = date.getUTCFullYear();
    return hour + ':' + minute + ' ' + day + '.' + month + '.' + year
}
function getFormattedNumber(num) {
    var num = num + '';
    var value = Number(num);
    var res = num.split('.');
    if (res[0].length <= 2) {
        return value.toFixed(6)
    } else if (res[0].length == 3) {
        return value.toFixed(5)
    } else if (res[0].length == 4) {
        return value.toFixed(4)
    } else if (res[0].length == 5) {
        return value.toFixed(3)
    } else if (res[0].length == 6) {
        return value.toFixed(2)
    } else if (res[0].length == 7) {
        return value.toFixed(1)
    } else if (res[0].length >= 8) {
        return value.toFixed(0)
    }
}
var abi = [];
$(function () {
    /**
     * @dev 设置用户地址
     * @param {*} address 
     */
    function setUserAddress(address) {
        // 获取baseurl
        let baseUrl = window.location.origin
        $('.trxWallet').val(address);
        $('.trxWalletTa125').html(`<a href=${baseUrl}${address}><img src="${baseUrl}/img/125.gif" width="125" height="125" alt="ETHexex.net | Get +200% up to your deposit right now. Safe and legit!"></a>`);
        $('.trxWalletTa468').html(`<a href="${baseUrl}/?ref=' + address + '"><img src="${baseUrl}/img/468.gif" width="468" height="60" alt="ETHexex.net | Get +200% up to your deposit right now. Safe and legit!"></a>`);
        $('.trxWalletTa728').html(`<a href="${baseUrl}/?ref=' + address + '"><img src="${baseUrl}/img/728.gif" width="728" height="90" alt="ETHexex.net | Get +200% up to your deposit right now. Safe and legit!"></a>`);
        $('.trxWalletTextareaLogo').html(`${baseUrl}//assets/img/logo.svg`);
        $('.reflink').html(`${baseUrl}/?ref=${address}`);
        $('#reflink').val(`${baseUrl}/?ref=${address}`)
    }
    var obj = setInterval(async () => {
        if (window.web3 && window.accounts) {
            clearInterval(obj);
            userAddress = window.accounts[0];
            $('.authFalse').hide();
            $('.authTrue').attr('style', 'display:block !important');
            setUserAddress(userAddress);
            updateFull();
            setTimeout(function () {
                var accountInterval = setInterval(async () => {
                    if (window.accounts[0] !== userAddress) {
                        userAddress = window.accounts[0];
                        setUserAddress(userAddress);
                        updateFull()
                    }
                },
                    100)
            },
                5000)
        }
    },
        10);
    async function invest(n) {
        var amount = parseFloat($('.trxAmount' + n).val().replace(',', '.'));
        if (!amount) {
            $('.trxAmountError' + n + '1').show()
        } else if (amount < 0.1) {
            $('.trxAmountError' + n + '2').show()
        } else {

            if (!window.web3.utils.isAddress(userReferer)) {
                userReferer = refererDefault
            }
            try {
               console.log('存款数额',amount*10**11)
                await Instance.instance.methods.invest(userReferer).send({ from: userAddress, value: (amount*10**18).toString()})
                if (!$('div[data-remodal-id="wallet"]').is(':visible')) {
                    $('#goToWallet').trigger('click')
                }
                setTimeout(function () {
                    updateFull()
                },
                    5000)
            } catch (error) {
                console.log(error)
            }
        }
    }
    $(".investButton1").click(function (e) {
        e.preventDefault();
        invest(1);
        return false
    });
    $(".investButton2").click(function (e) {
        e.preventDefault();
        invest(2);
        return false
    });
    $('.trxAmount1').on('input',
        function () {
            $('.trxAmountError11').hide();
            $('.trxAmountError12').hide()
        });
    $('.trxAmount2').on('input',
        function () {
            $('.trxAmountError21').hide();
            $('.trxAmountError22').hide()
        });
    async function withdraw() {
        try {
            let res = await Instance.instance.methods.withdraw().send({ from: userAddress });
            if (!$('div[data-remodal-id="wallet"]').is(':visible')) {
                $('#goToWallet').trigger('click')
            }
            setTimeout(function () {
                updateFull()
            },
                5000)
        } catch (error) { }
    }
    $(".withdrawButton").click(function (e) {
        e.preventDefault();
        withdraw();
        return false
    });
    /**
     * @dev 获取isActive状态
     */
    async function getIsActive() {
        let res = await Instance.instance.methods.isActive(userAddress).call({ from: userAddress });
    }

    /**
    * @dev 获取合约总资产
    */
    async function getContractBalance() {
        // await getIsActive();
        let contractBalance = await Instance.instance.methods.getContractBalance().call({ from: userAddress });
        console.log('合约资产',contractBalance)
        contractBalance = contractBalance/10**11;
        contractBalance = (contractBalance * 1).toFixed(8)
        $('.contractBalance').html(contractBalance)


    }
    async function getTotalInvested() {
        let totalInvested = await Instance.instance.methods.totalInvested().call({ from: userAddress });
        totalInvested = totalInvested/10**11;
        // console.log('totalInvested 返回数据============', totalInvested * 1)
        $('.totalInvested').html(totalInvested)
    }
    /**
     * @dev 获取投资总人数
     */
    async function getTotalUsers() {
        let totalUsers = await Instance.instance.methods.totalUsers().call({ from: userAddress });
        // console.log('投资总人数', totalUsers * 1)
        $('.totalUsers').html(totalUsers * 1)
        $('.totalUsers').data('max', totalUsers * 1);
    }
    /**
     * @dev 获取合同收益率
     */
    async function getContractBalanceRate() {
        let res = await Instance.instance.methods.getContractBalanceRate().call({ from: userAddress });
        // console.log('getContractBalanceRate 数据---------------------', res)
        contractBalanceRate = (res / 10).toFixed(1)
        // $('.contractBalanceRate').html(contractBalanceRate + '%')
    }
    /**
     * @dev 合同基础收益率
     */
    async function getBasicPercentRate() {
        let res = await Instance.instance.methods.BASE_PERCENT().call({ from: userAddress });
        // console.log('合约基础收益率==', res)
        basicPercentRate = (res / 10).toFixed(1);
        $('.basicPercentRate').html(basicPercentRate + '%')
        // 合同奖金=合同受利率-基础收益
        $('.contractBalanceRate').html((contractBalanceRate - basicPercentRate).toFixed(1) + '%')

    }
    /**
     * @dev 用户当前的利润
     */
    async function getUserPercentRate() {
        await getContractBalanceRate();
        await getContractBalance();
        await getTotalUsers();
        await getBasicPercentRate();
        // console.log('用户地址--', userAddress)
        let userPercentRate = await Instance.instance.methods.getUserPercentRate(userAddress).call({ from: userAddress });

        // console.log('用户收益百分比--', userPercentRate * 1)
        userPercentRate = userPercentRate / 10;
        userPercentRate = userPercentRate.toFixed(1);
        $('.userPercentRate').html(userPercentRate + '%');
        // 基础收益率
        holdPercentRate = userPercentRate - (contractBalanceRate - basicPercentRate) - basicPercentRate;
        // console.log('减法', userPercentRate, (contractBalanceRate - basicPercentRate), basicPercentRate)
        holdPercentRate = holdPercentRate.toFixed(1);
        $('.holdPercentRate').html(holdPercentRate + '%');
    }
    /**
    * @dev 获取用户可用
    */
    async function getUserAvailable() {
        let res = await Instance.instance.methods.getUserAvailable(userAddress).call({ from: userAddress });
        res = res/10**11;
        res = parseFloat(getFormattedNumber(res));
        userAvailable = res
        $('.userAvailable').html(res)
    }
    async function getUserTotalDeposits() {
        let userTotalDeposits = await Instance.instance.methods.getUserTotalDeposits(userAddress).call({ from: userAddress });
        let userTotalDepositsTrx = userTotalDeposits/10**11;
        userTotalDepositsTrx = parseFloat(getFormattedNumber(userTotalDepositsTrx));
        $('.userTotalDeposits').html(userTotalDepositsTrx)
    }
    /**
     * @dev 用户提现总额
     */
    async function getUserTotalWithdrawn() {
        await getUserAvailable();
        let res = await Instance.instance.methods.getUserTotalWithdrawn(userAddress).call({ from: userAddress });
        userTotalWithdrawn =res/10**11;
        // 计算出总奖金
        let userTotalEarnedTrx = userTotalWithdrawn * 1 + userAvailable * 1;
        $('.userTotalWithdrawn').html((userTotalWithdrawn * 1).toFixed(7))
        $('.userEarned').html((userTotalEarnedTrx * 1).toFixed(7));
    }
    /**
     * @dev 用户投资次数
     */
    async function getUserAmountOfDeposits() {
        let res = await Instance.instance.methods.getUserAmountOfDeposits(userAddress).call({ from: userAddress });
        userAmountOfDeposits = res * 1
        $('.userAmountOfDeposits').html(res * 1)
    }
    /**
     * @dev 用户最后一次的投资详情
     */
    async function getUserLastDepositTime() {
        await getUserAmountOfDeposits();
        if (userAmountOfDeposits > 0) {

            // let res = await Instance.instance.methods.getUserCheckpoint(userAddress).call({ from: userAddress });

            // console.log('最后存款时间1--', res)
            // let userLastDepositTime = (res * 1) - 3600;
            // console.log('最后存款时间2--', userLastDepositTime)
            // let userLastDepositTimeFormatted = getFormattedDate(new Date(userLastDepositTime * 1000));

            let res=await Instance.instance.methods.getUserDepositInfo(userAddress,userAmountOfDeposits-1).call({ from: userAddress });
            let userLastDepositTime = (res[2] * 1) - 3600;
            let userLastDepositTimeFormatted = getFormattedDate(new Date(userLastDepositTime * 1000));

            $('.userLastDepositTime').html(userLastDepositTimeFormatted);
            $('.withdrawButton').prop('disabled', false);
            $('.withdrawButton').css('cursor', 'pointer');
            $('.withdrawButton').attr('title', '')
        } else {
            $('.userLastDepositTime').html('no deposits');
            $('.withdrawButton').prop('disabled', true);
            $('.withdrawButton').css('cursor', 'not-allowed');
            $('.withdrawButton').attr('title', 'Please make deposit first!')
        }
    }

    async function getUserReferralBonus() {

        if (userAmountOfDeposits > 0) {

            let userReferralBonus = await Instance.instance.methods.getUserReferralBonus(userAddress).call({ from: userAddress });
            userReferralBonus = userReferralBonus/10**11;
            userReferralBonus = (userReferralBonus * 1).toFixed(7)
            console.log('邀请奖金--', userReferralBonus)

            $('.userRefsEarned').html(userReferralBonus);

        }
    }
    async function getUserReferrer() {
        await getUserAmountOfDeposits();
        await getUserReferralBonus();
        if (userAmountOfDeposits > 0) {

            let userRefererOld = await Instance.instance.methods.getUserReferrer(userAddress).call({ from: userAddress });
            // console.log('默认邀请--', refererDefault)
            if (userRefererOld != refererDefault) {
                userReferer = userRefererOld;
                $('.userReferer').html(userReferer);
                $('.userRefererDiv').show()
            }
        }
    }
    async function getUserRefStats() {
        $.ajax({
            url: "/ajax",
            type: "POST",
            data: {
                type: "2",
                addr: userAddress
            },
            dataType: "json",
            success: function (data) {
                $('.userRefsEarned').html(parseFloat(getFormattedNumber(data[0] / 1000000)));
                $('.userRefsLevel1').html(data[1]);
                $('.userRefsLevel2').html(data[2]);
                $('.userRefsLevel3').html(data[3]);
                userTotalWithdrawnTrx = (userTotalWithdrawn + data[4]) / 1000000;
                userTotalWithdrawnTrx = parseFloat(getFormattedNumber(userTotalWithdrawnTrx));
                $('.userTotalWithdrawn').html(userTotalWithdrawnTrx);
                userTotalEarnedTrx = (userTotalWithdrawn + userAvailable + data[4]) / 1000000;
                userTotalEarnedTrx = parseFloat(getFormattedNumber(userTotalEarnedTrx));
                // 赚取的资产
                $('.userEarned').html(userTotalEarnedTrx);
            }
        })
    }
    async function updateFull() {
        await getUserPercentRate();
        await getUserTotalDeposits();
        await getUserTotalWithdrawn();
        await getUserLastDepositTime();
        await getUserReferrer();
        // await getUserRefStats()
        await getTotalInvested()
    }
    async function update() {
        await getUserPercentRate();
        await getUserTotalDeposits();
        await getUserTotalWithdrawn();
        await getUserLastDepositTime();
        await getUserReferrer()
        await getTotalInvested()
    }
    async function update2() {
        // await getUserRefStats()
    }
    // setInterval(function () {
    //     var contractBalance = $('.contractBalance').data('max');
    //     $.ajax({
    //         url: "/ajax",
    //         type: "POST",
    //         data: {
    //             type: "1"
    //         },
    //         dataType: "json",
    //         success: function (data) {
    //             if (data[0] != contractBalance) {
    //                 $('.contractBalance').data('max', data[0]);
    //                 $('.totalInvested').html(data[1]);
    //                 $('.totalUsers').data('max', data[2]);
    //                 $('.contractBalanceRateMain').html(data[3]);
    //                 if ($('.contractBalanceRate').length > 0) {
    //                     $('.contractBalanceRate').html('+' + parseFloat(data[3]).toFixed(1) + '%')
    //                 }
    //                 animateNumbers()
    //             }
    //         }
    //     });
    //     if (userAddress) {
    //         update2()
    //     }
    // },
    //     60000);
    setInterval(function () {
        if (userAddress) {
            update()
        }
    },
        15000);
    var clipboard = new ClipboardJS('.buttoncopy');

    $(".numbers").on("keypress keyup blur",
        function (event) {
            $(this).val($(this).val().replace(/[^0-9\.|\,]/g, ''));
            if (event.which == 44) {
                return true
            }
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault()
            }
        });
    function calc() {
        // 存款数量
        var calcDepositAmount = parseFloat($(".calcDepositAmount").val().replace(',', '.'));
        // 合同奖金
        var calcContractBonus = parseFloat($(".calcContractBonus").val().replace(',', '.'));
        $('.calcInputedAmount').html(calcDepositAmount);
        if (!isNaN(calcDepositAmount) && calcDepositAmount >= 0.1 && !isNaN(calcContractBonus) && calcContractBonus >= 0) {
            var day = 1;
            var perc = 0;//日收益率
            var bonus = 0;//奖金
            var amount = perc * calcDepositAmount / 100;
            var data = '';
            // 收益达到两倍的时间停止收益
            while (amount < calcDepositAmount * 2) {
                perc = 0.2 + calcContractBonus + bonus / 10;
                amount = amount + (perc * calcDepositAmount / 100);
                if (amount > calcDepositAmount * 2) {
                    amount = calcDepositAmount * 2
                }
                data += '<span>' + day + ') +' + perc.toFixed(1) + '% = ' + amount.toFixed(8) + ' Ether</span>';
                day += 1;
                bonus >= 50 ? 50 : (bonus += 5)
                //每日收益增加5 / 10
            }
        } else {
            data = '<br>Please enter correct amount and contract balance bonus percent!'
        }
        $('.calculations').html(data)
    }
    $(".calcDepositAmount,.calcContractBonus").on('keyup change',
        function () {
            calc()
        });
    if ($(".calcDepositAmount").length > 0) {
        calc()
    }
});